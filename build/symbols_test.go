package build

// SymbolTable

// ResolveSelector
// CAN RETURN A SELECTOR WITH ONLY ONE MEMBER
// CAN RETURN A SELECTOR WITH MULTIPLE MEMBERS
// REJECTS IF A SELECTOR DOESN'T EXIST
// REJECTS IF A SELECTOR DOESN'T HAVE A MEMBER

// ResolveValueObject
// REJECTS IF TARGET IS NOT A VALUEOBJECT

// ResolveLiteral
// CAN RETURN APPROPRIATE TYPES
//   - string
//   - int64
//   - float64
//   - bool
//   - nil
// REJECTS IF UNKNOWN LITERAL IS INCLUDED

// ResolveArrayExpression
// CAN RETURN AN EMPTY ITERABLE
// CAN RETURN AN ITERABLE
// CAN RETURN AN ITERABLE FROM GENERIC ITEMS
// REJECTS IF ITEMS CANNOT BE CONSTRUCTED

// ValidateArrayExpression
// CAN ACCEPT AN EMPTY ITERABLE
// CAN ACCEPT AN ITERABLE
// CAN ACCEPT AN ITERABLE FROM GENERIC ITEMS
// REJECTS IF ITEMS CANNOT BE CONSTRUCTED

// ResolveInstanceExpression
// CAN RETURN AN INSTANSEATED OBJECT
// REJECTS IF SELECTOR IS NOT FOUND
// REJECTS IF GENERIC CONSTRUCTOR DOESN'T EXIST ON TARGET CLASS
// REJECTS IF CONSTRUCTOR THROWS AN ERROR
// REJECTS IF SELECTOR IS NOT A CLASS

// ValidateInstanceExpression
// CAN ACCEPT A GENERIC OBJECT
// REJECTS IF SELECTOR IS NOT FOUND
// REJECTS IF GENERIC CONSTRUCTOR DOESN'T EXIST ON TARGET CLASS
// REJECTS IF CONSTRUCTOR THROWS AN ERROR
// REJECTS IF SELECTOR IS NOT A CLASS

// ResolveUnaryExpression
// CAN RETURN A NUMBER WITH A UNARY OPERATOR APPLIED
//   -Float
//   +Float
//   -Int
//   +Int
//   -Double
//   +Double
//   -Number
//   +Number
// CAN RETURN A BOOLEAN WITH A NOT OPERATOR APPLIED
// CAN RETURN APPROPRIATE UNARY FOR VALUE EXPRESSION
// REJECTS IF A NUMERIC UNARY IS APPLIED TO A NON-NUMERIC OBJECT
// REJECTS IF A NOT UNARY IS APPLIED TO A NON-BOOLEAN OBJECT
// REJECTS IF OPERATOR IS NOT A UNARY

// ValidateUnaryExpression
// /\ can do that

// ResolveBinaryExpression
// CAN PROPERLY OPREATE BETWEEN TWO VALUEOBJECTS WITH DEFINED OPERATORS
// REJECTS IF NODES ARE NOT OPERABLE
